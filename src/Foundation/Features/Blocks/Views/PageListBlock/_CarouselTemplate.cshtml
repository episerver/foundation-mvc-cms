@using EPiServer.AddOns.Helpers
@using EPiServer.Core.Html
@model PageListBlockViewModel


<style type="text/css">
    .slider {
        width: 100%;
        margin: 50px auto;
    }

    .slick-slide {
        margin: 0px 20px;
    }

        .slick-slide img {
            width: 100%;
        }

    .slick-prev:before, .slick-next:before {
        color: black;
    }

    .slick-slide {
        transition: all ease-in-out .3s;
        /* opacity: .2;*/
    }

    .slick-active {
        opacity: 1;
    }

    *
    .slick-current {
        opacity: 1;
    }

</style>


@if (Model.Pages != null && Model.Pages.Any())
{
    <div class="regular slider">

        @{
            int active = 0;

            foreach (var page in Model.Pages)
            {
                var foundationPage = page.Page as FoundationPageData;
                var CSSActive = (active == 0) ? "active" : "";


                <div class="preview__card">
                    <div class="preview__card--show">
                        <div class="card--top">
                            @if (page != null && !ContentReference.IsNullOrEmpty(foundationPage.TeaserVideo))
                            {
                                <video class="img-fluid" autoplay loop playsinline muted>
                                    <source src="@Url.ContentUrl(foundationPage.TeaserVideo)" type="video/mp4">
                                </video>
                            }
                            else
                            {
                                <picture style="width: 100% ">
                                    @if (page != null && !ContentReference.IsNullOrEmpty(foundationPage.PageImage))
                                    {
                                        <picture class="img-fluid preview--image-top__image">
                                            <source data-srcset="@Url.ContentUrl(foundationPage.PageImage)?format=webp&width=1200" type="image/webp">
                                            <img class="img-fluid preview--image-top__image lazyload" data-src="@Url.ContentUrl(foundationPage.PageImage)?width=1200" loading="lazy" />
                                        </picture>
                                    }
                                </picture>
                            }
                        </div>

                        <div class="card--bottom">
                            <div class="card--bottom__title">
                                <a class="color-ltGreen article-title">
                                    <h4>  @Html.Raw(page != null ? foundationPage.MetaTitle : page.Page.Name)</h4>
                                </a>
                                @if (page != null && !String.IsNullOrEmpty(foundationPage.TeaserText))
                                {
                                    <p>@Html.Raw(TextIndexer.StripHtml(foundationPage.TeaserText, 150))</p>
                                }
                                else
                                {
                                    <p>@Html.Raw(TextIndexer.StripHtml(foundationPage.MainBody.ToString(), 150))</p>
                                }

                            </div>
                            <div class="card--bottom__date">
                                <small>
                                    <i>
                                        @foundationPage.StartPublish.Value.ToString("dd MMM yyyy")
                                    </i>
                                </small>
                            </div>
                        </div>
                    </div>
                    <div class="preview__card--middle">
                        <div class="triangle-side"></div>
                        <div class="triangle-center"></div>
                        <div class="triangle-side"></div>
                    </div>
                    <div class="preview__card--overlay"
                         style="background-color: @Model.CurrentBlock.OverlayColor; color: @Model.CurrentBlock.OverlayTextColor">
                        <div class="preview__card--description">
                            @if (page != null && !String.IsNullOrEmpty(foundationPage.TeaserText))
                            {
                                <p>@Html.Raw(TextIndexer.StripHtml(foundationPage.TeaserText, 200))</p>
                            }
                            else
                            {
                                <p>@Html.Raw(TextIndexer.StripHtml(foundationPage.MainBody.ToString(), 200))</p>
                            }

                            <a href="@foundationPage.ContentLink.GetPublicUrl()">
                                Read more
                            </a>
                        </div>
                    </div>
                </div>



                active++;
            }
        }



    </div>



}
